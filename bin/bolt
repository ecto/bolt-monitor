#!/usr/bin/env node

var parser  = require('nomnom'),
    forever = require('forever'),
    colors  = require('colors'),
    jeans   = require('jeans');

parser.command('start')
  .callback(start)
  .help('start the bolt server');

parser.command('stop')
  .callback(stop)
  .help('stop the bolt server');

parser.command('set')
  .callback(set)
  .help('set a configuration variable');

if (!process.argv[2]) process.argv[2] = '-h';

parser
  .opts({
    version: {
      abbr: 'v',
      flag: true,
      help: 'print version and exit',
      callback: function() {
         return "v0.0.6";
      }
    }
  })
  .parseArgs();

function start(){
  if (process.env.USER != 'root') {
    console.log('I refuse to run without permission, good sir!'.red);
    console.log('Try: ' + 'sudo !!'.green);
  } else {
    console.log('Starting bolt-server...'.magenta);
    var file = __dirname + '/../mesh.js';
    forever.list(null, function(err, procs){
      var running = false;
      if (procs) {
        for (var i in procs) {
          if (procs[i].file == file) {
            running = true;
            break;
          }
        }
      }
      if (!running) {
        forever.cli.start(file, {}, true);
        console.log('Done!'.green);
      } else console.log('Bolt is already running! I disincline to acquiesce to your request.'.red);
    });
  }
}

function stop(){
  if (process.env.USER != 'root') {
    console.log('I refuse to run without permission, good sir!'.red);
    console.log('Try: ' + 'sudo !!'.green);
  } else {
    console.log('Stopping bolt-server...'.magenta);
    var file = __dirname + '/../mesh.js';
    forever.cli.stop(file);
    console.log('Done!'.green);
  }
}

function set(){
  var key = process.argv[3],
      value = process.argv[4];
  if (!key || !value) {
    console.log('Missing required parameters'.red);
  } else {
    jeans.set(key, value);
    console.log('Saved!'.green);
  }
}
